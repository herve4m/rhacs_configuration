---
- name: Ensure the permission set exists 1
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    description: My first permission set with full read access
    resource_accesses:
      Access: READ_ACCESS
      Administration: READ_ACCESS
      Alert: READ_ACCESS
      CVE: READ_ACCESS
      Cluster: READ_ACCESS
      Compliance: READ_ACCESS
      Deployment: READ_ACCESS
      DeploymentExtension: READ_ACCESS
      Detection: READ_ACCESS
      Image: READ_ACCESS
      Integration: READ_ACCESS
      K8sRole: READ_ACCESS
      K8sRoleBinding: READ_ACCESS
      K8sSubject: READ_ACCESS
      Namespace: READ_ACCESS
      NetworkGraph: READ_ACCESS
      NetworkPolicy: READ_ACCESS
      Node: READ_ACCESS
      Secret: READ_ACCESS
      ServiceAccount: READ_ACCESS
      VulnerabilityManagementApprovals: READ_ACCESS
      VulnerabilityManagementRequests: READ_ACCESS
      WatchedImage: READ_ACCESS
      WorkflowAdministration: READ_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did change something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the permission set exists 1 (no change) 1
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    description: My first permission set with full read access
    resource_accesses:
      Access: READ_ACCESS
      Administration: READ_ACCESS
      Alert: READ_ACCESS
      CVE: READ_ACCESS
      Cluster: READ_ACCESS
      Compliance: READ_ACCESS
      Deployment: READ_ACCESS
      DeploymentExtension: READ_ACCESS
      Detection: READ_ACCESS
      Image: READ_ACCESS
      Integration: READ_ACCESS
      K8sRole: READ_ACCESS
      K8sRoleBinding: READ_ACCESS
      K8sSubject: READ_ACCESS
      Namespace: READ_ACCESS
      NetworkGraph: READ_ACCESS
      NetworkPolicy: READ_ACCESS
      Node: READ_ACCESS
      Secret: READ_ACCESS
      ServiceAccount: READ_ACCESS
      VulnerabilityManagementApprovals: READ_ACCESS
      VulnerabilityManagementRequests: READ_ACCESS
      WatchedImage: READ_ACCESS
      WorkflowAdministration: READ_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the permission set exists 1 (no change) 2
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the permission set exists 1 (no change) 3
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    resource_accesses:
      Access: READ_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the permission set exists 1 (no change) 4
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    new_name: ansible set 1
    resource_accesses:
      Access: READ_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the permission set exists 1 (no change) 5
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: does not exist
    new_name: ansible set 1
    resource_accesses:
      Access: READ_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: ERROR EXPECTED Ensure the default permission set is removed
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: Admin
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  ignore_errors: true
  register: result

- name: Ensure that the task failed (removing default set)
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (default set)

- name: ERROR EXPECTED Ensure the default permission set is renamed
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: Admin
    new_name: ansible test
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  ignore_errors: true
  register: result

- name: Ensure that the task failed (removing default set)
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (default set)

- name: ERROR EXPECTED Ensure the default permission set is updated
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: Admin
    description: My new description
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  ignore_errors: true
  register: result

- name: Ensure that the task failed (removing default set)
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (default set)

- name: Ensure the permission set 1 is updated
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    description: My first permission set with full read access 2
    resource_accesses:
      VulnerabilityManagementRequests: NO_ACCESS
      WatchedImage: NO_ACCESS
      WorkflowAdministration: READ_WRITE_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did change something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the permission set exists 1 (no change) 5
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    description: My first permission set with full read access 2
    resource_accesses:
      Access: READ_ACCESS
      Administration: READ_ACCESS
      Alert: READ_ACCESS
      CVE: READ_ACCESS
      Cluster: READ_ACCESS
      Compliance: READ_ACCESS
      Deployment: READ_ACCESS
      DeploymentExtension: READ_ACCESS
      Detection: READ_ACCESS
      Image: READ_ACCESS
      Integration: READ_ACCESS
      K8sRole: READ_ACCESS
      K8sRoleBinding: READ_ACCESS
      K8sSubject: READ_ACCESS
      Namespace: READ_ACCESS
      NetworkGraph: READ_ACCESS
      NetworkPolicy: READ_ACCESS
      Node: READ_ACCESS
      Secret: READ_ACCESS
      ServiceAccount: READ_ACCESS
      VulnerabilityManagementApprovals: READ_ACCESS
      VulnerabilityManagementRequests: NO_ACCESS
      WatchedImage: NO_ACCESS
      WorkflowAdministration: READ_WRITE_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the permission set 1 is renamed
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    new_name: ansible set 2
    description: My first permission set with full read access 2
    resource_accesses:
      VulnerabilityManagementRequests: READ_WRITE_ACCESS
      WatchedImage: READ_WRITE_ACCESS
      WorkflowAdministration: READ_WRITE_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did change something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the permission set 1 is removed (no change)
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 1
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the permission set exists 2 (no change)
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 2
    description: My first permission set with full read access 2
    resource_accesses:
      Access: READ_ACCESS
      Administration: READ_ACCESS
      Alert: READ_ACCESS
      CVE: READ_ACCESS
      Cluster: READ_ACCESS
      Compliance: READ_ACCESS
      Deployment: READ_ACCESS
      DeploymentExtension: READ_ACCESS
      Detection: READ_ACCESS
      Image: READ_ACCESS
      Integration: READ_ACCESS
      K8sRole: READ_ACCESS
      K8sRoleBinding: READ_ACCESS
      K8sSubject: READ_ACCESS
      Namespace: READ_ACCESS
      NetworkGraph: READ_ACCESS
      NetworkPolicy: READ_ACCESS
      Node: READ_ACCESS
      Secret: READ_ACCESS
      ServiceAccount: READ_ACCESS
      VulnerabilityManagementApprovals: READ_ACCESS
      VulnerabilityManagementRequests: READ_WRITE_ACCESS
      WatchedImage: READ_WRITE_ACCESS
      WorkflowAdministration: READ_WRITE_ACCESS
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: ERROR EXPECTED Ensure the permission set 2 is renamed
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 2
    new_name: Admin
    description: My first permission set with full read access 2
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  ignore_errors: true
  register: result

- name: Ensure that the task failed (renaming default set)
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (default set)

- name: Ensure the permission set exists 3
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 3
    description: My description
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did change something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: ERROR EXPECTED Ensure the permission set 3 is renamed
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 3
    new_name: ansible set 2
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  ignore_errors: true
  register: result

- name: Ensure that the task failed (existing destination set)
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (existing set)

- name: Ensure the permission set 3 is updated
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 3
    description: ""
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did change something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the permission set 3 is removed
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 3
    description: My test
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did change something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the permission set 2 is removed
  herve4m.rhacs_configuration.rhacs_permission_set:
    name: ansible set 2
    description: My test
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
...
