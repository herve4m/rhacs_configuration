---
- name: Ensure the OS Tools policy category exists
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: OS Tools
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task changes something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the OS Tools policy category is renamed
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: OS Tools
    new_name: System Tools
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task changes something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the System Tools policy category is updated (no change) (1)
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: OS Tools
    new_name: System Tools
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the System Tools policy category is updated (no change) (2)
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: foobar
    new_name: System Tools
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the System Tools policy category is updated (no change) (3)
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: System Tools
    new_name: System Tools
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the System Tools policy category is updated (no change) (4)
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: System Tools
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the OS Tools 2 policy category exists
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: OS Tools 2
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task changes something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the OS Tools 2 policy category is renamed
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: OS Tools 2
    new_name: System Tools
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task changes something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the OS Tools 2 policy category is removed (no change)
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: OS Tools 2
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the un-existing policy category is removed (no change)
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: does not exist
    new_name: System Tools
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: Ensure the System Tools policy category is removed
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: System Tools
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task changes something
  ansible.builtin.assert:
    that: result['changed']
    fail_msg: The preceding task should have changed something

- name: Ensure the System Tools policy category is removed (no change)
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: System Tools
    new_name: does not exist
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  register: result

- name: Ensure that the task did not change anything
  ansible.builtin.assert:
    that: not result['changed']
    fail_msg: The preceding task should not have changed anything

- name: ERROR EXPECTED Ensure the default Kubernetes category is removed
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: Kubernetes
    state: absent
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (default category)

- name: ERROR EXPECTED Ensure the default Kubernetes category is renamed
  herve4m.rhacs_configuration.rhacs_policy_category:
    name: Kubernetes
    new_name: System Tools 4
    state: present
    skip_validate_certs: true
    rhacs_host: "{{ rhacs_host }}"
    rhacs_token: "{{ rhacs_token }}"
  ignore_errors: true
  register: result

- name: Ensure that the task failed
  ansible.builtin.assert:
    that: result['failed']
    fail_msg: The preceding task should have failed (default category)
...
